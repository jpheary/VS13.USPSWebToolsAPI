//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VS13.USPS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USPSFault", Namespace="http://schemas.datacontract.org/2004/07/VS13.USPS")]
    [System.SerializableAttribute()]
    public partial class USPSFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://VS13.USPS", ConfigurationName="USPS.IUSPSWebTools")]
    public interface IUSPSWebTools {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VS13.USPS/IUSPSWebTools/TrackRequest", ReplyAction="http://VS13.USPS/IUSPSWebTools/TrackRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VS13.USPS.USPSFault), Action="http://Argix.USPSFault", Name="USPSFault", Namespace="http://schemas.datacontract.org/2004/07/VS13.USPS")]
        System.Data.DataSet TrackRequest(string itemNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VS13.USPS/IUSPSWebTools/TrackRequest", ReplyAction="http://VS13.USPS/IUSPSWebTools/TrackRequestResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> TrackRequestAsync(string itemNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VS13.USPS/IUSPSWebTools/TrackFieldRequest", ReplyAction="http://VS13.USPS/IUSPSWebTools/TrackFieldRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VS13.USPS.USPSFault), Action="http://Argix.USPSFault", Name="USPSFault", Namespace="http://schemas.datacontract.org/2004/07/VS13.USPS")]
        System.Data.DataSet TrackFieldRequest(string itemNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VS13.USPS/IUSPSWebTools/TrackFieldRequest", ReplyAction="http://VS13.USPS/IUSPSWebTools/TrackFieldRequestResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> TrackFieldRequestAsync(string itemNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VS13.USPS/IUSPSWebTools/TrackFieldRequests", ReplyAction="http://VS13.USPS/IUSPSWebTools/TrackFieldRequestsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VS13.USPS.USPSFault), Action="http://Argix.USPSFault", Name="USPSFault", Namespace="http://schemas.datacontract.org/2004/07/VS13.USPS")]
        System.Data.DataSet TrackFieldRequests(string[] itemNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VS13.USPS/IUSPSWebTools/TrackFieldRequests", ReplyAction="http://VS13.USPS/IUSPSWebTools/TrackFieldRequestsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> TrackFieldRequestsAsync(string[] itemNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VS13.USPS/IUSPSWebTools/VerifyAddress", ReplyAction="http://VS13.USPS/IUSPSWebTools/VerifyAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VS13.USPS.USPSFault), Action="http://Argix.USPSFault", Name="USPSFault", Namespace="http://schemas.datacontract.org/2004/07/VS13.USPS")]
        System.Data.DataSet VerifyAddress(string firmName, string address1, string address2, string city, string state, string zip5, string zip4);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VS13.USPS/IUSPSWebTools/VerifyAddress", ReplyAction="http://VS13.USPS/IUSPSWebTools/VerifyAddressResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> VerifyAddressAsync(string firmName, string address1, string address2, string city, string state, string zip5, string zip4);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VS13.USPS/IUSPSWebTools/LookupCityState", ReplyAction="http://VS13.USPS/IUSPSWebTools/LookupCityStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VS13.USPS.USPSFault), Action="http://Argix.USPSFault", Name="USPSFault", Namespace="http://schemas.datacontract.org/2004/07/VS13.USPS")]
        System.Data.DataSet LookupCityState(string zip5);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VS13.USPS/IUSPSWebTools/LookupCityState", ReplyAction="http://VS13.USPS/IUSPSWebTools/LookupCityStateResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> LookupCityStateAsync(string zip5);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VS13.USPS/IUSPSWebTools/LookupZipCode", ReplyAction="http://VS13.USPS/IUSPSWebTools/LookupZipCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VS13.USPS.USPSFault), Action="http://Argix.USPSFault", Name="USPSFault", Namespace="http://schemas.datacontract.org/2004/07/VS13.USPS")]
        System.Data.DataSet LookupZipCode(string firmName, string address1, string address2, string city, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://VS13.USPS/IUSPSWebTools/LookupZipCode", ReplyAction="http://VS13.USPS/IUSPSWebTools/LookupZipCodeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> LookupZipCodeAsync(string firmName, string address1, string address2, string city, string state);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUSPSWebToolsChannel : VS13.USPS.IUSPSWebTools, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class USPSWebToolsClient : System.ServiceModel.ClientBase<VS13.USPS.IUSPSWebTools>, VS13.USPS.IUSPSWebTools {
        
        public USPSWebToolsClient() {
        }
        
        public USPSWebToolsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public USPSWebToolsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public USPSWebToolsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public USPSWebToolsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet TrackRequest(string itemNumber) {
            return base.Channel.TrackRequest(itemNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TrackRequestAsync(string itemNumber) {
            return base.Channel.TrackRequestAsync(itemNumber);
        }
        
        public System.Data.DataSet TrackFieldRequest(string itemNumber) {
            return base.Channel.TrackFieldRequest(itemNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TrackFieldRequestAsync(string itemNumber) {
            return base.Channel.TrackFieldRequestAsync(itemNumber);
        }
        
        public System.Data.DataSet TrackFieldRequests(string[] itemNumbers) {
            return base.Channel.TrackFieldRequests(itemNumbers);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TrackFieldRequestsAsync(string[] itemNumbers) {
            return base.Channel.TrackFieldRequestsAsync(itemNumbers);
        }
        
        public System.Data.DataSet VerifyAddress(string firmName, string address1, string address2, string city, string state, string zip5, string zip4) {
            return base.Channel.VerifyAddress(firmName, address1, address2, city, state, zip5, zip4);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> VerifyAddressAsync(string firmName, string address1, string address2, string city, string state, string zip5, string zip4) {
            return base.Channel.VerifyAddressAsync(firmName, address1, address2, city, state, zip5, zip4);
        }
        
        public System.Data.DataSet LookupCityState(string zip5) {
            return base.Channel.LookupCityState(zip5);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LookupCityStateAsync(string zip5) {
            return base.Channel.LookupCityStateAsync(zip5);
        }
        
        public System.Data.DataSet LookupZipCode(string firmName, string address1, string address2, string city, string state) {
            return base.Channel.LookupZipCode(firmName, address1, address2, city, state);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LookupZipCodeAsync(string firmName, string address1, string address2, string city, string state) {
            return base.Channel.LookupZipCodeAsync(firmName, address1, address2, city, state);
        }
    }
}
